---
- hosts: all
  vars:
    - CI_ENVIRONMENT_URL: "{{ lookup('env','CI_ENVIRONMENT_URL') | default('test.dev.b-connect.eu', true) }}"
    - CI_PROJECT_NAMESPACE: "{{ lookup('env','CI_PROJECT_NAMESPACE') | default('test-dev', true) }}"
    - CI_PROJECT_NAME: "{{ lookup('env','CI_PROJECT_NAME') | default('test-dev', true) }}"
    - CI_ENVIRONMENT_SLUG: "{{ lookup('env','CI_ENVIRONMENT_SLUG') | default('dev', true) }}"
    - CI_COMMIT_SHA: "{{ lookup('env','CI_COMMIT_SHA') | default('dev', true) }}"
    - CI_REPOSITORY_URL: "{{ lookup('env','CI_REPOSITORY_URL') | default('dev', true) }}"
    - BUILD_DIR: "/home/{{ ansible_user }}/ansible/{{ CI_ENVIRONMENT_SLUG }}/{{ CI_PROJECT_NAMESPACE}}/{{ CI_PROJECT_NAME }}"
    - DOCKSAL_ENV_FILE: "{{ BUILD_DIR }}/.docksal/docksal-local.env"
    - COMPOSER_INSTALL_FLAGS: "{{ lookup('env','COMPOSER_INSTALL_FLAGS') | default('', true) }}"
    - DRUPAL_PROFILE: "{{ lookup('env','DRUPAL_PROFILE') | default('standard', true) }}"
    - DRUPAL_ACCOUNT_NAME: "{{ lookup('env','DRUPAL_ACCOUNT_NAME') | default('admin', true) }}"
    - DRUPAL_ACCOUNT_PASS: "{{ lookup('env','DRUPAL_ACCOUNT_PASS') | default('admin', true) }}"

  tasks:
    - name: Checkout project
      git:
        repo: "{{ CI_REPOSITORY_URL }}"
        dest: "{{ BUILD_DIR }}"
        force: true
        version: "{{ CI_COMMIT_SHA }}"

    - name: Add docksal.env file
      template:
        src: ../templates/docksal.env.j2
        dest: "{{ DOCKSAL_ENV_FILE }}"
        force: true

    - name: Restart docksal container with fin up
      shell: source ~/.zshrc && cd {{ BUILD_DIR }} && fin up
      register: output
      args:
        executable: /bin/zsh

    - name: Composer install
      shell: source ~/.zshrc && cd {{ BUILD_DIR }} && composer install --ignore-platform-reqs --quiet --no-interaction {{ COMPOSER_INSTALL_FLAGS }}
      args:
        executable: /bin/zsh

    - name: Check if site is already installed.
      command: "fin bash status bootstrap"
      args:
        chdir: "{{ BUILD_DIR }}/docroot"
        executable: /bin/zsh
      register: drupal_site_installed
      failed_when: "drupal_site_installed.stdout is undefined"
      changed_when: false

    - debug:
        msg: "Site installed"
      when: drupal_site_installed

    - include: tasks/install-site.yml
      when: drupal_site_installed

    - name: source bashrc
      shell: source ~/.zshrc && cd {{ BUILD_DIR }}/docroot && fin drush cr
      args:
        executable: /bin/zsh
      ignore_errors: yes